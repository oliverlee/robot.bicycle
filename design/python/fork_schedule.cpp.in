#include "gain_schedule.h"

namespace control {

const std::array<rt_controller_t, num_gains> GainSchedule::schedule_ {{ "{{" }}
  /* ------------------ AUTOGENERATED CODE STARTS HERE ------------------- */
{% for n in range(NUMGAINS) %}
	{ /* -------------- CONTROLLER GAINS FOR SPEED {{ n }} START -------------- */
		{{ SPEED[n] }}f, /* theta_R_dot at speed, map key */
		{ /* map value */
{% for M in [[(STATESIZE, STATESIZE, A), (STATESIZE, INPUTSIZE, B)], [(OUTPUTSIZE, STATESIZE, C)]] %}
			{ /* StateEstimator or LQRController */
{% for k in M %}
				{{ "{{" }} /* Matrix A,B or C */
{% set k_loop = loop %}
{% for i in range(k[0]) %}
{% set i_loop = loop %}
{% for j in range(k[1]) %}
{% if not (loop.last and i_loop.last) %}
					{{ k[2][n][i, j] }}f,
{% else %}
					{{ k[2][n][i, j] }}f
{% endif %}
{% endfor %}
{% endfor %}
{% if not k_loop.last %}
				{{ "}}" }},
{% else %}
				{{ "}}" }}
{% endif %}
{% endfor %}
			}, /* end StateEstimator or LQRController */
{% endfor %}
			{ /* PIController */
				{{ "{{" }} {{ KP[n] }}f {{ "}}" }},
				{{ "{{" }} {{ KI[n] }}f {{ "}}" }}
			} /* end PIController */
		} /* end map value */
{% if not loop.last %}
	}, /* -------------- CONTROLLER GAINS FOR SPEED {{ n }} END --------------- */
{% else %}
	} /* --------------- CONTROLLER GAINS FOR SPEED {{ n }} END --------------- */
{% endif %}
{% endfor %}
{{ "}}" }}; /* gains */

} // namespace control

